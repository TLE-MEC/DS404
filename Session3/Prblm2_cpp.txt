//Program to check if an expression has duplicate paranthesis

#include <iostream>
using namespace std;

char stack[10], top = -1, size = 10;

bool isEmpty()
{
    if(top == -1)
        return true;
    else
        return false;
}

bool isFull()
{
    if(top == size-1)
        return true;
    else
        return false;
}

void push(int x)
{
    if(!isFull())
    {
        top = top + 1;
        stack[top] = x;
    }
    else
        cout<<"Stack Overflow!!\n";
}

void pop()
{
    if(!isEmpty())
        top = top - 1;
    else
        cout<<"Stack Underflow!!\n";
}

char peek()
{
    if(!isEmpty())
        return stack[top];
    else
        return '0';
}

bool check(string s)
{
    if (s.length() <= 3) {
        return false;
    }
    for (char c: s)
    {
        if (c != ')') 
        {
            push(c);
        }
        else 
        {
            if (peek() == '(') 
            {
                return true;
            }
            while (peek() != '(') 
            {
                pop();
            }
            pop();
        }
    }
    return false;
}

int main()
{
    string s1 = "((x+y))+z", s2 = "(x+y)", s3 = "((x+y)+((z)))";
    if(check(s1))
        cout<<"Duplicate brackets found!\n";
    else
        cout<<"DUplicate brackets not found!\n";
    return 0;
}
